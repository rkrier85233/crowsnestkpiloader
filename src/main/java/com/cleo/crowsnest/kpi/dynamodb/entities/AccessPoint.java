package com.cleo.crowsnest.kpi.dynamodb.entities;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.cleo.crowsnest.kpi.loader.entities.AccessPointDimension;

import java.time.Instant;
import java.util.Date;
import java.util.Map;

import lombok.Builder;
import lombok.Getter;
import lombok.NonNull;
import lombok.Setter;


/**
 * @author rkrier
 */
@Getter
@Setter
@DynamoDBTable(tableName = "AccessPoint")
public class AccessPoint {
    @DynamoDBHashKey
    private String organizationId;
    @DynamoDBRangeKey
    private String id;
    private String name;
    private String lowerCaseName;
    private String status;
    private String platform;
    private String platformVersion;
    private String transportUri;
    private String publicCertData;
    private String sqsQueueUrl;
    private Date created;
    private Map<String, String> ownerAttributes;
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    private Date updated;
    private String ownerId;

    // Public no arg constructor needed by persistence layer.
    public AccessPoint() {
    }


    @Builder
    private AccessPoint(@NonNull AccessPointDimension accessPointDimension, @NonNull Map<String, String> userAttributes, @NonNull Instant created) {
        this.id = accessPointDimension.getId();
        this.name = accessPointDimension.getName();
        this.lowerCaseName = name.toLowerCase();
        this.platform = accessPointDimension.getPlatform();
        this.platformVersion = accessPointDimension.getPlatformVersion();
        this.transportUri = accessPointDimension.getTransportUri();
        this.status = "ACTIVE";
        this.ownerId = userAttributes.get("sub");
        this.ownerAttributes = userAttributes;
        this.organizationId = accessPointDimension.getOrganizationId();
        this.created = Date.from(created);
    }
}
